# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Registration.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import sqlite3


# loading css
import cs


class RegisterationForm(object):

    def registerusers(self):
        Name=self.NameLE.text()
        Email=self.EmailLE.text()
        Phone_No = self.PhoneLE.text()
        User= self.UserCB.currentText()
        Password= self.PassLE.text()
        Con_Pass=self.CpassLE.text()

        db = sqlite3.connect("Hospital.db")

        # if password matches

        if Password== Con_Pass:
            # creating database for receptionist and patient to save data
            if User=="Receptionist":
                db.execute("create table if not exists Receptionist (Name text NOT NULL, Email text NOT NULL,Phone_No INT NOT NULL,Password text NOT NULL)")
                db.execute("insert into Receptionist Values(?,?,?,?)",(Name, Email, Phone_No,Password))
                db.commit()
                message1 = QMessageBox()
                message1.setWindowTitle("Successfull")
                message1.setInformativeText("You have successfully registered by this Name as Receptionist:  " + Name)
                message1.exec_()
            elif User == "Patient":
                db.execute("create table if not exists PatientEmail (Name text NOT NULL, Email text NOT NULL,Phone_No INT NOT NULL,Password text NOT NULL)")
                db.execute("insert into PatientEmail Values(?,?,?,?)", (Name, Email, Phone_No, Password))
                db.commit()
                message1 = QMessageBox()
                message1.setWindowTitle("Successfull")
                message1.setInformativeText (f' Patient {Name} registered succesfully')
                message1.exec_()
            # Clearing all the fields when it is done or give an error
            db.close()
            self.NameLE.clear()
            self.EmailLE.clear()
            self.PhoneLE.clear()
            self.PassLE.clear()
            self.CpassLE.clear()
            # If the password does not match, try again
        else:
            message1 = QMessageBox()
            message1.setWindowTitle("Alert!")
            message1.setInformativeText("Your Password does not match. Please try again!  ")
            x = message1.exec_()
            self.PassLE.clear()
            self.CpassLE.clear()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 586)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(310, 90, 131, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(250, 120, 211, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.NameLE = QtWidgets.QLineEdit(self.centralwidget)
        self.NameLE.setGeometry(QtCore.QRect(250, 160, 241, 31))
        self.NameLE.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.NameLE.setObjectName("NameLE")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(250, 180, 211, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.EmailLE = QtWidgets.QLineEdit(self.centralwidget)
        self.EmailLE.setGeometry(QtCore.QRect(250, 220, 241, 31))
        self.EmailLE.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.EmailLE.setObjectName("EmailLE")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(250, 250, 211, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.PhoneLE = QtWidgets.QLineEdit(self.centralwidget)
        self.PhoneLE.setGeometry(QtCore.QRect(250, 290, 241, 31))
        self.PhoneLE.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.PhoneLE.setObjectName("PhoneLE")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(250, 330, 211, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.UserCB = QtWidgets.QComboBox(self.centralwidget)
        self.UserCB.setGeometry(QtCore.QRect(330, 341, 131, 31))
        self.UserCB.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.UserCB.setObjectName("UserCB")
        self.UserCB.addItem("")
        self.UserCB.setItemText(0, "")
        self.UserCB.addItem("")
        self.UserCB.addItem("")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(250, 380, 81, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(380, 380, 141, 61))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.PassLE = QtWidgets.QLineEdit(self.centralwidget)
        self.PassLE.setGeometry(QtCore.QRect(250, 430, 111, 31))
        self.PassLE.setStyleSheet("background-color: rgb(255, 255, 255);")
        #to hide password
        self.PassLE.setEchoMode(QtWidgets.QLineEdit.Password)
        self.PassLE.setObjectName("PassLE")
        self.CpassLE = QtWidgets.QLineEdit(self.centralwidget)
        self.CpassLE.setGeometry(QtCore.QRect(380, 430, 131, 31))
        self.CpassLE.setStyleSheet("background-color: rgb(255, 255, 255);")
        # to hide password
        self.CPassLE = QtWidgets.QLineEdit(self.centralwidget)
        self.CpassLE.setObjectName("CpassLE")
        self.RegisterPB = QtWidgets.QPushButton(self.centralwidget)
        self.RegisterPB.setGeometry(QtCore.QRect(310, 490, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Copperplate Gothic Light")
        font.setPointSize(10)
        self.RegisterPB.setFont(font)
        self.RegisterPB.setStyleSheet("background-color: rgb(138, 173, 255);")
        self.RegisterPB.setObjectName("RegisterPB")
        self.RegisterPB.clicked.connect(self.registerusers)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(300, 40, 131, 51))
        self.label_8.setStyleSheet("image: url(:/background/images.png);")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(-60, -30, 871, 621))
        font = QtGui.QFont()
        font.setFamily("Mongolian Baiti")
        font.setPointSize(13)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("")
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/background/H.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.label_9.raise_()
        self.label_8.raise_()
        self.label_3.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.NameLE.raise_()
        self.EmailLE.raise_()
        self.label_4.raise_()
        self.PhoneLE.raise_()
        self.label_5.raise_()
        self.UserCB.raise_()
        self.label_6.raise_()
        self.label_7.raise_()
        self.PassLE.raise_()
        self.CpassLE.raise_()
        self.RegisterPB.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "REGISTRATION"))
        self.label_2.setText(_translate("MainWindow", "Name"))
        self.label_3.setText(_translate("MainWindow", "Email"))
        self.label_4.setText(_translate("MainWindow", "Phone Number"))
        self.label_5.setText(_translate("MainWindow", "User Type"))
        self.UserCB.setItemText(1, _translate("MainWindow", "Receptionist"))
        self.UserCB.setItemText(2, _translate("MainWindow", "Patient"))
        self.label_6.setText(_translate("MainWindow", "Password"))
        self.label_7.setText(_translate("MainWindow", "Confirm Password"))
        self.RegisterPB.setText(_translate("MainWindow", "REGISTER"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = RegisterationForm()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
